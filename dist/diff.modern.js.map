{"version":3,"file":"diff.modern.js","sources":["../src/generator.js","../src/diff.js"],"sourcesContent":["export const generate = (vNode) => {\r\n    if(typeof vNode === 'string') return document.createTextNode(vNode);\r\n    return generateElement(vNode);\r\n};\r\n\r\nexport const generateElement = (vNode) => {\r\n    const $el = document.createElement(vNode.tag);\r\n    for(var [k,v] of Object.entries(vNode?.opts?.attrs)) $el.setAttribute(k,v);\r\n    for(var vChild of vNode.children){\r\n        if(vChild !== null){\r\n            const $child = generate(vChild);\r\n            $el.appendChild($child);\r\n        }\r\n    }\r\n    return $el;\r\n}","import { generate } from \"./generator\";\r\nexport const zip = (xs, ys) => {\r\n    const zipped = [];\r\n    for (var i = 0; i < Math.min(xs.length, ys.length); i++) {\r\n        zipped.push([xs[i], ys[i]]);\r\n    }\r\n    return zipped;\r\n};\r\n\r\nexport const diffAttribute = (vNewNode,vOldAttr, vNewAttr) => {\r\n    const patches = [];\r\n    for (const [k, v] of Object.entries(vNewAttr)) {\r\n       patches.push($node => {\r\n            try{\r\n                    $node.setAttribute(k, v);\r\n            }catch(e){ \r\n                // console.error(`invalid directive name ${k}`, e.message);\r\n            }\r\n           return $node;\r\n       });\r\n    }\r\n\r\n    for (const k in vOldAttr) {\r\n        if(!(k in vOldAttr)) {\r\n            patches.push($node => {\r\n                $node.removeAttribute(k);\r\n                return $node;\r\n            });\r\n        }\r\n    }\r\n\r\n    return $node => {\r\n        for(var patch of patches) {\r\n            patch($node);\r\n        }\r\n    };\r\n};\r\n\r\nexport const diffChildren = (vOldChildren, vNewChildren) => {\r\n\r\n    const patches = [];\r\n    const additionalPatches = [];\r\n    const removalPatches = [];\r\n\r\n    for(var [oldVChild, newVChild] of zip(vOldChildren, vNewChildren)) {\r\n        patches.push(diff(oldVChild, newVChild));\r\n    }\r\n\r\n    if(vOldChildren.length < vNewChildren.length){\r\n        for (const additionalChild of vNewChildren.slice(vOldChildren.length)) {\r\n            additionalPatches.push($node => {\r\n                const $newChild = generate(additionalChild);\r\n                $node.appendChild($newChild);\r\n                return $node;\r\n            });\r\n        }\r\n    }else{\r\n        for (var i = 0; i < Math.abs(vNewChildren.length - vOldChildren.length); i++) {\r\n            removalPatches.push($node => {\r\n                $node.removeChild($node.lastChild);\r\n                return $node;\r\n            });\r\n        }\r\n    }\r\n\r\n    return $parent => {\r\n\r\n\r\n        for(const [patch, child] of zip(patches, $parent.childNodes)) {\r\n            patch(child);\r\n        }\r\n\r\n        for(const patch of additionalPatches){\r\n            patch($parent);\r\n        }\r\n\r\n        for(const patch of removalPatches){\r\n            patch($parent);\r\n        }\r\n\r\n        return $parent;\r\n    };\r\n};\r\n\r\nexport const diff = (vOldNode, vNewNode) => {\r\n\r\n    if(vNewNode === undefined){\r\n        return $node => {\r\n            $node.remove();\r\n            return undefined;\r\n        };\r\n    }\r\n\r\n    if(typeof vOldNode === 'string' || typeof vNewNode === 'string'){\r\n        if(vOldNode !== vNewNode){\r\n            return $node => {\r\n                const $newNode = generate(vNewNode);\r\n                $node.replaceWith($newNode);\r\n                return $newNode;\r\n            };\r\n        }else{\r\n            return $node => undefined;\r\n        }\r\n    }\r\n\r\n    if(vOldNode.tagName !== vNewNode.tagName){\r\n        return $node => {\r\n            const $newNode = generate(vNewNode);\r\n            $node.replaceWith($newNode);\r\n            return $newNode;\r\n        };\r\n    }\r\n\r\n    const patchAttribute = diffAttribute(vNewNode,vOldNode.opts.attrs, vNewNode.opts.attrs);\r\n    const patchChildren = diffChildren(vOldNode.children, vNewNode.children);\r\n\r\n    return $node => {\r\n        patchAttribute($node);\r\n        patchChildren($node);\r\n        // patchKey($node);\r\n        return $node;\r\n    };\r\n}\r\n"],"names":["generate","vNode","document","createTextNode","generateElement","$el","createElement","tag","k","v","Object","entries","opts","_vNode$opts","attrs","setAttribute","vChild","children","$child","appendChild","zip","xs","ys","zipped","i","Math","min","length","push","diffAttribute","vNewNode","vOldAttr","vNewAttr","patches","$node","e","removeAttribute","patch","diffChildren","vOldChildren","vNewChildren","additionalPatches","removalPatches","oldVChild","newVChild","diff","additionalChild","slice","$newChild","abs","removeChild","lastChild","$parent","child","childNodes","vOldNode","undefined","remove","$newNode","replaceWith","tagName","patchAttribute","patchChildren"],"mappings":"MAAaA,EAAYC,GACD,iBAAVA,EAA2BC,SAASC,eAAeF,GACtDG,EAAgBH,GAGdG,EAAmBH,IAC5B,MAAMI,EAAMH,SAASI,cAAcL,EAAMM,KACzC,IAAI,IAAKC,EAAEC,KAAMC,OAAOC,cAAQV,YAAAA,EAAOW,aAAPC,EAAaC,cAAQT,EAAIU,aAAaP,EAAEC,GACxE,IAAI,IAAIO,KAAUf,EAAMgB,SACpB,GAAc,OAAXD,EAAgB,CACf,MAAME,EAASlB,EAASgB,GACxBX,EAAIc,YAAYD,GAGxB,OAAOb,GCbEe,EAAM,CAACC,EAAIC,KACpB,MAAMC,EAAS,GACf,IAAK,IAAIC,EAAI,EAAGA,EAAIC,KAAKC,IAAIL,EAAGM,OAAQL,EAAGK,QAASH,IAChDD,EAAOK,KAAK,CAACP,EAAGG,GAAIF,EAAGE,KAE3B,OAAOD,GAGEM,EAAgB,CAACC,EAASC,EAAUC,KAC7C,MAAMC,EAAU,GAChB,IAAK,MAAOzB,EAAGC,KAAMC,OAAOC,QAAQqB,GACjCC,EAAQL,KAAKM,IACR,IACQA,EAAMnB,aAAaP,EAAGC,SACvB0B,IAGR,OAAOD,IAId,IAAK,MAAM1B,KAAKuB,EACPvB,KAAKuB,GACNE,EAAQL,KAAKM,IACTA,EAAME,gBAAgB5B,GACf0B,IAKnB,OAAOA,IACH,IAAI,IAAIG,KAASJ,EACbI,EAAMH,KAKLI,EAAe,CAACC,EAAcC,KAEvC,MAAMP,EAAU,GACVQ,EAAoB,GACpBC,EAAiB,GAEvB,IAAI,IAAKC,EAAWC,KAAcxB,EAAImB,EAAcC,GAChDP,EAAQL,KAAKiB,EAAKF,EAAWC,IAGjC,GAAGL,EAAaZ,OAASa,EAAab,OAClC,IAAK,MAAMmB,KAAmBN,EAAaO,MAAMR,EAAaZ,QAC1Dc,EAAkBb,KAAKM,IACnB,MAAMc,EAAYhD,EAAS8C,GAE3B,OADAZ,EAAMf,YAAY6B,GACXd,SAIf,IAAK,IAAIV,EAAI,EAAGA,EAAIC,KAAKwB,IAAIT,EAAab,OAASY,EAAaZ,QAASH,IACrEkB,EAAed,KAAKM,IAChBA,EAAMgB,YAAYhB,EAAMiB,WACjBjB,IAKnB,OAAOkB,IAGH,IAAI,MAAOf,EAAOgB,KAAUjC,EAAIa,EAASmB,EAAQE,YAC7CjB,EAAMgB,GAGV,IAAI,MAAMhB,KAASI,EACfJ,EAAMe,GAGV,IAAI,MAAMf,KAASK,EACfL,EAAMe,GAGV,OAAOA,IAIFP,EAAO,CAACU,EAAUzB,KAE3B,QAAgB0B,IAAb1B,EACC,OAAOI,IACHA,EAAMuB,UAKd,GAAuB,iBAAbF,GAA6C,iBAAbzB,EACtC,OAAGyB,IAAazB,EACLI,IACH,MAAMwB,EAAW1D,EAAS8B,GAE1B,OADAI,EAAMyB,YAAYD,GACXA,GAGJxB,MAIf,GAAGqB,EAASK,UAAY9B,EAAS8B,QAC7B,OAAO1B,IACH,MAAMwB,EAAW1D,EAAS8B,GAE1B,OADAI,EAAMyB,YAAYD,GACXA,GAIf,MAAMG,EAAiBhC,EAAcC,EAASyB,EAAS3C,KAAKE,MAAOgB,EAASlB,KAAKE,OAC3EgD,EAAgBxB,EAAaiB,EAAStC,SAAUa,EAASb,UAE/D,OAAOiB,IACH2B,EAAe3B,GACf4B,EAAc5B,GAEPA"}