{"version":3,"file":"artty.modern.js","sources":["../src/h.js","../src/generator.js","../src/diff.js","../src/parser.js","../src/artty.js"],"sourcesContent":["const h = (tag, opts = { attrs: {}, on: {} }, children) => {\r\n    if('undefined' === typeof tag) return null;\r\n    return Array.isArray(opts) ? \r\n    {tag, opts: { attrs: {}, on: {} }, children: opts.flat()} :\r\n    {tag, opts, children: children.flat()};\r\n};\r\n\r\nexport default h;","export const generate = (vNode) => {\r\n    if(typeof vNode === 'string') return document.createTextNode(vNode);\r\n    return generateElement(vNode);\r\n};\r\n\r\nexport const generateElement = (vNode) => {\r\n    const $el = document.createElement(vNode.tag);\r\n    for(var [k,v] of Object.entries(vNode?.opts?.attrs)) $el.setAttribute(k,v);\r\n    for(var vChild of vNode.children){\r\n        if(vChild !== null){\r\n            const $child = generate(vChild);\r\n            $el.appendChild($child);\r\n        }\r\n    }\r\n    return $el;\r\n}","import { generate } from \"./generator\";\r\nexport const zip = (xs, ys) => {\r\n    const zipped = [];\r\n    for (var i = 0; i < Math.min(xs.length, ys.length); i++) {\r\n        zipped.push([xs[i], ys[i]]);\r\n    }\r\n    return zipped;\r\n};\r\n\r\nexport const diffAttribute = (vNewNode,vOldAttr, vNewAttr) => {\r\n    const patches = [];\r\n    for (const [k, v] of Object.entries(vNewAttr)) {\r\n       patches.push($node => {\r\n            try{\r\n                    $node.setAttribute(k, v);\r\n            }catch(e){ \r\n                // console.error(`invalid directive name ${k}`, e.message);\r\n            }\r\n           return $node;\r\n       });\r\n    }\r\n\r\n    for (const k in vOldAttr) {\r\n        if(!(k in vOldAttr)) {\r\n            patches.push($node => {\r\n                $node.removeAttribute(k);\r\n                return $node;\r\n            });\r\n        }\r\n    }\r\n\r\n    return $node => {\r\n        for(var patch of patches) {\r\n            patch($node);\r\n        }\r\n    };\r\n};\r\n\r\nexport const diffChildren = (vOldChildren, vNewChildren) => {\r\n\r\n    const patches = [];\r\n    const additionalPatches = [];\r\n    const removalPatches = [];\r\n\r\n    for(var [oldVChild, newVChild] of zip(vOldChildren, vNewChildren)) {\r\n        patches.push(diff(oldVChild, newVChild));\r\n    }\r\n\r\n    if(vOldChildren.length < vNewChildren.length){\r\n        for (const additionalChild of vNewChildren.slice(vOldChildren.length)) {\r\n            additionalPatches.push($node => {\r\n                const $newChild = generate(additionalChild);\r\n                $node.appendChild($newChild);\r\n                return $node;\r\n            });\r\n        }\r\n    }else{\r\n        for (var i = 0; i < Math.abs(vNewChildren.length - vOldChildren.length); i++) {\r\n            removalPatches.push($node => {\r\n                $node.removeChild($node.lastChild);\r\n                return $node;\r\n            });\r\n        }\r\n    }\r\n\r\n    return $parent => {\r\n\r\n\r\n        for(const [patch, child] of zip(patches, $parent.childNodes)) {\r\n            patch(child);\r\n        }\r\n\r\n        for(const patch of additionalPatches){\r\n            patch($parent);\r\n        }\r\n\r\n        for(const patch of removalPatches){\r\n            patch($parent);\r\n        }\r\n\r\n        return $parent;\r\n    };\r\n};\r\n\r\nexport const diff = (vOldNode, vNewNode) => {\r\n\r\n    if(vNewNode === undefined){\r\n        return $node => {\r\n            $node.remove();\r\n            return undefined;\r\n        };\r\n    }\r\n\r\n    if(typeof vOldNode === 'string' || typeof vNewNode === 'string'){\r\n        if(vOldNode !== vNewNode){\r\n            return $node => {\r\n                const $newNode = generate(vNewNode);\r\n                $node.replaceWith($newNode);\r\n                return $newNode;\r\n            };\r\n        }else{\r\n            return $node => undefined;\r\n        }\r\n    }\r\n\r\n    if(vOldNode.tagName !== vNewNode.tagName){\r\n        return $node => {\r\n            const $newNode = generate(vNewNode);\r\n            $node.replaceWith($newNode);\r\n            return $newNode;\r\n        };\r\n    }\r\n\r\n    const patchAttribute = diffAttribute(vNewNode,vOldNode.opts.attrs, vNewNode.opts.attrs);\r\n    const patchChildren = diffChildren(vOldNode.children, vNewNode.children);\r\n\r\n    return $node => {\r\n        patchAttribute($node);\r\n        patchChildren($node);\r\n        // patchKey($node);\r\n        return $node;\r\n    };\r\n}\r\n","export const parse = ($target, d = {}) => {\r\n    const ctx = { };\r\n    var vnode = [];\r\n    for(var $childNode of $target.childNodes){\r\n        if($childNode.nodeType === Node.TEXT_NODE) {\r\n            vnode.push(parseFromElement($childNode, ctx));\r\n            continue;\r\n        }\r\n        if(!$childNode.hasAttribute('(else)'))\r\n            vnode.push(parseFromElement($childNode, ctx));\r\n    }\r\n    return `[${vnode.join(',')}]`;\r\n}\r\n\r\nexport const h = ($node, ctx = {}) => {\r\n    // console.log('context', ctx);\r\n    if(typeof $node === \"undefined\" || typeof $node === 'null') return `h()`;\r\n    return `h('${$node.tagName}',${parseOptions($node,ctx)},${parse($node,ctx)})`\r\n};\r\n\r\nexport const parseDirective = ($node, ctx = {}) => {\r\n    if($node.hasAttribute('(for)')){\r\n        var $statement = $node.getAttribute('(for)');\r\n        $node.removeAttribute('(for)');\r\n        if(!$statement.includes(' in '))\r\n            return `__.l((${parseExpression($statement.trim(),ctx)}), () => ${parseFromElement($node,ctx)})`;\r\n        var [l,r] = $statement.split(' in ');\r\n        l = l.trim();\r\n        return `__.l((${parseExpression(r,ctx)}), (${l}) => ${parseFromElement($node,ctx)})`;\r\n    }\r\n\r\n    if($node.hasAttribute('(if)')){\r\n        var $statement = $node.getAttribute('(if)');\r\n        $node.removeAttribute('(if)')\r\n        var $elseNode = $node.nextElementSibling;\r\n        if($elseNode !== null && $elseNode.hasAttribute('(else)')){\r\n            $elseNode.setAttribute('data-elsed', true);\r\n            return `((${parseExpression($statement,ctx)}) ? ${parseFromElement($node,ctx)} : ${parseFromElement($elseNode,ctx)})`;\r\n        }\r\n        return `((${parseExpression($statement,ctx)}) ? ${parseFromElement($node,ctx)} : ${parseFromElement()})`;\r\n    }\r\n\r\n    return h($node, ctx);\r\n}\r\n\r\nexport const parseFromElement = ($node, ctx = {}) => {\r\n    if(typeof $node === 'undefined') return h();\r\n    if($node.nodeType === Node.TEXT_NODE){\r\n        return parseText($node.textContent,ctx);\r\n    }\r\n\r\n    return parseDirective($node,ctx);\r\n}\r\n\r\nexport const parseText = ($text, ctx = {}) => {\r\n    var text = $text.replaceAll(\"\\n\",\"\\\\n\");\r\n    var parts = [];\r\n    var t = \"\";\r\n    var p = [];\r\n    for(var c of text.split('')){\r\n        \r\n        if(c === '{'){\r\n            p.push('{');\r\n            if(p.length > 0){\r\n                parts.push(t);\r\n                t = \"{\";\r\n            }\r\n        }else if(c === '}'){\r\n            p.pop();\r\n            if(p.length <= 0){\r\n                parts.push(t + c);\r\n                t = \"\";\r\n            }\r\n        }else \r\n        t += c;\r\n    }\r\n    parts.push(t);\r\n    return parseReactive(parts.filter(e => e !== ''),ctx);\r\n}\r\n\r\nexport const parseExpression = (e, ctx = {}) => {\r\n    // console.log('exp ', ctx)\r\n    var exp = e || '';\r\n    var regex = /([a-zA-Z_$.][a-zA-Z_$0-9.]*)/igm;\r\n    var $$ = exp.matchAll(regex);\r\n    if($$ === null) return exp;\r\n    for (let $ of $$) {\r\n        var variable = $[0];\r\n        var pos = $.index;\r\n        if((typeof window[(variable.split('.')[0] || $)] === 'undefined')){\r\n            exp = exp.substring(0,pos) + exp.substring(pos).replace(variable.split('.')[0],`(_.${variable.split('.')[0]} || ${variable.split('.')[0]})`);\r\n        }\r\n    }\r\n    // for(var $ of $$){\r\n    //     if((typeof window[($.split('.')[0] || $)] === 'undefined')){\r\n    //         console.log($$)\r\n    //     }\r\n    // }\r\n    return exp;\r\n}\r\n\r\nexport const parseReactive = (parts, ctx = {}) => {\r\n    return parts.map(e => {\r\n        let exp = \"\";\r\n        if(e.startsWith('{') && e.endsWith('}')){\r\n            exp = e.slice(1,e.length-1).trim();\r\n        }else{\r\n            return `\"${e}\"`;\r\n        }\r\n        return `__.s(${parseExpression(exp,ctx)})`;\r\n    }).join(\",\");\r\n}\r\n\r\nexport const parseOptions = ($node, ctx = {}) => {\r\n    var attrs = [];\r\n    if($node.attributes.length > 0){\r\n        for(var {name,value} of $node.attributes){\r\n            if(name.includes(':'))\r\n                attrs.push(`'${name.slice(1)}': ${parseExpression(value,ctx)}`);\r\n            else\r\n                attrs.push(`'${name}': '${value}'`);\r\n        }\r\n    }\r\n    return `{ attrs: {${attrs.join(',')}}}`;\r\n}\r\n\r\n\r\nexport const parseDOM = ($html, ctx = {}) => {\r\n    try{\r\n        const data = new DOMParser().parseFromString($html,'text/html').body;\r\n        return data;\r\n    }catch(e){\r\n        throw new Error(\"Parsing DOM error!\");\r\n    }\r\n}","import h from './h';\r\nimport { diff } from './diff';\r\nimport { generate } from './generator';\r\nimport {reactive} from './reactive';\r\nimport hyperactiv from 'hyperactiv'\r\nimport { parse } from './parser';\r\nconst { observe, computed } = hyperactiv;\r\n\r\nexport const createApp = (state) => {\r\n    return ({\r\n        state: observe(state),\r\n        vnodes: [],\r\n        template: \"\",\r\n        $el: null,\r\n        updateList: [],\r\n        sync($s){\r\n            this.$el = document.querySelector($s);\r\n            this.template = `return h('div',${parse(this.$el)})`;\r\n            const [_,__] = [this.state,this.utils];\r\n            let vApp = new Function('h','_','__',this.template)(h,_,__);\r\n            let $app = generate(vApp);\r\n            let $rootEl = this.mount($app,this.$el);\r\n            this.state.__handler = (a,b,c,d) => {\r\n                const [_,__] = [this.state,this.utils];\r\n                let vNewApp = new Function('h','_','__',this.template)(h,_,__);\r\n                const patch = diff(vApp,vNewApp);\r\n                $rootEl = patch($rootEl);\r\n                vApp = vNewApp;\r\n                this.vnodes = vApp;\r\n            }\r\n            return this;\r\n        },\r\n        update(){\r\n            for(var v of this.updateList) v(this.state);\r\n            this.$el.removeAttribute('(cloak)');\r\n        },\r\n        render(cb){\r\n            // this.nextTick((state) => {\r\n                \r\n            // });\r\n            // return this;\r\n        },\r\n        nextTick(cb){\r\n            this.updateList.push(cb);\r\n        },\r\n        mount($node,$el){\r\n            $el.replaceWith($node);\r\n            return $node;\r\n        },\r\n        utils: {\r\n            l(time, cb){\r\n                var h = [];\r\n                if(typeof time === 'number'){\r\n                    Array.from(Array(time).keys()).forEach((a,i) => h.push(cb(i,i)));\r\n                }\r\n                if(Array.isArray(time)){\r\n                    time.forEach((a,i) => h.push(cb(a, i)));\r\n                }\r\n                return h;\r\n            },\r\n            s(t){\r\n                if(typeof t === 'undefined') return \"\";\r\n                if(typeof t === 'object') return JSON.stringify(t);\r\n                return String(t);\r\n            }\r\n        }\r\n    });\r\n};"],"names":["h","tag","opts","attrs","on","children","Array","isArray","flat","generate","vNode","document","createTextNode","generateElement","$el","createElement","k","v","Object","entries","_vNode$opts","setAttribute","vChild","$child","appendChild","zip","xs","ys","zipped","i","Math","min","length","push","diff","vOldNode","vNewNode","undefined","$node","remove","$newNode","replaceWith","tagName","patchAttribute","vOldAttr","vNewAttr","patches","e","removeAttribute","patch","diffAttribute","patchChildren","vOldChildren","vNewChildren","additionalPatches","removalPatches","oldVChild","newVChild","additionalChild","slice","$newChild","abs","removeChild","lastChild","$parent","child","childNodes","diffChildren","parse","$target","d","ctx","vnode","$childNode","nodeType","Node","TEXT_NODE","hasAttribute","parseFromElement","join","parseOptions","parseText","textContent","$statement","getAttribute","includes","parseExpression","trim","l","r","split","$elseNode","nextElementSibling","parseDirective","$text","text","replaceAll","parts","t","p","c","pop","parseReactive","filter","exp","$$","matchAll","$","variable","pos","index","window","substring","replace","map","startsWith","endsWith","attributes","name","value","observe","hyperactiv","createApp","state","vnodes","template","updateList","sync","$s","this","querySelector","_","__","utils","vApp","Function","$app","$rootEl","mount","__handler","a","b","vNewApp","update","render","cb","nextTick","time","from","keys","forEach","s","JSON","stringify","String"],"mappings":"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"}