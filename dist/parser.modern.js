const t=(t,r={})=>{const e={};var n=[];for(var s of t.childNodes)s.nodeType!==Node.TEXT_NODE&&s.hasAttribute("(else)")||n.push(i(s,e));return`[${n.join(",")}]`},r=(r,e={})=>void 0===r||"null"==typeof r?"h()":`h('${r.tagName}',${u(r,e)},${t(r,e)})`,e=(t,e={})=>{if(t.hasAttribute("(for)")){var n=t.getAttribute("(for)");if(t.removeAttribute("(for)"),!n.includes(" in "))return`__.l((${s(n.trim(),e)}), () => ${i(t,e)})`;var[l,u]=n.split(" in ");return l=l.trim(),`__.l((${s(u,e)}), (${l}) => ${i(t,e)})`}if(t.hasAttribute("(if)")){n=t.getAttribute("(if)"),t.removeAttribute("(if)");var o=t.nextElementSibling;return null!==o&&o.hasAttribute("(else)")?(o.setAttribute("data-elsed",!0),`((${s(n,e)}) ? ${i(t,e)} : ${i(o,e)})`):`((${s(n,e)}) ? ${i(t,e)} : ${i()})`}return r(t,e)},i=(t,i={})=>void 0===t?r():t.nodeType===Node.TEXT_NODE?n(t.textContent,i):e(t,i),n=(t,r={})=>{var e=t.replaceAll("\n","\\n"),i=[],n="",s=[];for(var u of e.split(""))"{"===u?(s.push("{"),s.length>0&&(i.push(n),n="{")):"}"===u?(s.pop(),s.length<=0&&(i.push(n+u),n="")):n+=u;return i.push(n),l(i.filter(t=>""!==t),r)},s=(t,r={})=>{var e=t||"",i=e.matchAll(/([a-zA-Z_$.][a-zA-Z_$0-9.]*)/gim);if(null===i)return e;for(let t of i){var n=t[0],s=t.index;void 0===window[n.split(".")[0]||t]&&(e=e.substring(0,s)+e.substring(s).replace(n.split(".")[0],`(_.${n.split(".")[0]} || ${n.split(".")[0]})`))}return e},l=(t,r={})=>t.map(t=>{let e="";return t.startsWith("{")&&t.endsWith("}")?(e=t.slice(1,t.length-1).trim(),`__.s(${s(e,r)})`):`"${t}"`}).join(","),u=(t,r={})=>{var e=[];if(t.attributes.length>0)for(var{name:i,value:n}of t.attributes)i.includes(":")?e.push(`'${i.slice(1)}': ${s(n,r)}`):e.push(`'${i}': '${n}'`);return`{ attrs: {${e.join(",")}}}`},o=(t,r={})=>{try{return(new DOMParser).parseFromString(t,"text/html").body}catch(t){throw new Error("Parsing DOM error!")}};export{r as h,t as parse,o as parseDOM,e as parseDirective,s as parseExpression,i as parseFromElement,u as parseOptions,l as parseReactive,n as parseText};
//# sourceMappingURL=parser.modern.js.map
