{"version":3,"file":"diff.umd.js","sources":["../src/generator.js","../src/diff.js"],"sourcesContent":["export const generate = (vNode) => {\r\n    if(typeof vNode === 'string') return document.createTextNode(vNode);\r\n    return generateElement(vNode);\r\n};\r\n\r\nexport const generateElement = (vNode) => {\r\n    const $el = document.createElement(vNode.tag);\r\n    for(var [k,v] of Object.entries(vNode?.opts?.attrs)) $el.setAttribute(k,v);\r\n    for(var vChild of vNode.children){\r\n        if(vChild !== null){\r\n            const $child = generate(vChild);\r\n            $el.appendChild($child);\r\n        }\r\n    }\r\n    return $el;\r\n}","import { generate } from \"./generator\";\r\nexport const zip = (xs, ys) => {\r\n    const zipped = [];\r\n    for (var i = 0; i < Math.min(xs.length, ys.length); i++) {\r\n        zipped.push([xs[i], ys[i]]);\r\n    }\r\n    return zipped;\r\n};\r\n\r\nexport const diffAttribute = (vNewNode,vOldAttr, vNewAttr) => {\r\n    const patches = [];\r\n    for (const [k, v] of Object.entries(vNewAttr)) {\r\n       patches.push($node => {\r\n            try{\r\n                    $node.setAttribute(k, v);\r\n            }catch(e){ \r\n                // console.error(`invalid directive name ${k}`, e.message);\r\n            }\r\n           return $node;\r\n       });\r\n    }\r\n\r\n    for (const k in vOldAttr) {\r\n        if(!(k in vOldAttr)) {\r\n            patches.push($node => {\r\n                $node.removeAttribute(k);\r\n                return $node;\r\n            });\r\n        }\r\n    }\r\n\r\n    return $node => {\r\n        for(var patch of patches) {\r\n            patch($node);\r\n        }\r\n    };\r\n};\r\n\r\nexport const diffChildren = (vOldChildren, vNewChildren) => {\r\n\r\n    const patches = [];\r\n    const additionalPatches = [];\r\n    const removalPatches = [];\r\n\r\n    for(var [oldVChild, newVChild] of zip(vOldChildren, vNewChildren)) {\r\n        patches.push(diff(oldVChild, newVChild));\r\n    }\r\n\r\n    if(vOldChildren.length < vNewChildren.length){\r\n        for (const additionalChild of vNewChildren.slice(vOldChildren.length)) {\r\n            additionalPatches.push($node => {\r\n                const $newChild = generate(additionalChild);\r\n                $node.appendChild($newChild);\r\n                return $node;\r\n            });\r\n        }\r\n    }else{\r\n        for (var i = 0; i < Math.abs(vNewChildren.length - vOldChildren.length); i++) {\r\n            removalPatches.push($node => {\r\n                $node.removeChild($node.lastChild);\r\n                return $node;\r\n            });\r\n        }\r\n    }\r\n\r\n    return $parent => {\r\n\r\n\r\n        for(const [patch, child] of zip(patches, $parent.childNodes)) {\r\n            patch(child);\r\n        }\r\n\r\n        for(const patch of additionalPatches){\r\n            patch($parent);\r\n        }\r\n\r\n        for(const patch of removalPatches){\r\n            patch($parent);\r\n        }\r\n\r\n        return $parent;\r\n    };\r\n};\r\n\r\nexport const diff = (vOldNode, vNewNode) => {\r\n\r\n    if(vNewNode === undefined){\r\n        return $node => {\r\n            $node.remove();\r\n            return undefined;\r\n        };\r\n    }\r\n\r\n    if(typeof vOldNode === 'string' || typeof vNewNode === 'string'){\r\n        if(vOldNode !== vNewNode){\r\n            return $node => {\r\n                const $newNode = generate(vNewNode);\r\n                $node.replaceWith($newNode);\r\n                return $newNode;\r\n            };\r\n        }else{\r\n            return $node => undefined;\r\n        }\r\n    }\r\n\r\n    if(vOldNode.tagName !== vNewNode.tagName){\r\n        return $node => {\r\n            const $newNode = generate(vNewNode);\r\n            $node.replaceWith($newNode);\r\n            return $newNode;\r\n        };\r\n    }\r\n\r\n    const patchAttribute = diffAttribute(vNewNode,vOldNode.opts.attrs, vNewNode.opts.attrs);\r\n    const patchChildren = diffChildren(vOldNode.children, vNewNode.children);\r\n\r\n    return $node => {\r\n        patchAttribute($node);\r\n        patchChildren($node);\r\n        // patchKey($node);\r\n        return $node;\r\n    };\r\n}\r\n"],"names":["generate","vNode","document","createTextNode","generateElement","$el","createElement","tag","Object","entries","opts","_vNode$opts","attrs","setAttribute","children","vChild","$child","appendChild","zip","xs","ys","zipped","i","Math","min","length","push","diffAttribute","vNewNode","vOldAttr","vNewAttr","patches","k","v","$node","e","removeAttribute","patch","diffChildren","vOldChildren","vNewChildren","additionalPatches","removalPatches","diff","additionalChild","$newChild","slice","abs","removeChild","lastChild","$parent","childNodes","vOldNode","undefined","remove","$newNode","replaceWith","tagName","patchAttribute","patchChildren"],"mappings":"2hCAAaA,EAAW,SAACC,GACrB,MAAoB,iBAAVA,EAA2BC,SAASC,eAAeF,GACtDG,EAAgBH,IAGdG,EAAkB,SAACH,GAE5B,IADA,IAAMI,EAAMH,SAASI,cAAcL,EAAMM,WACxBC,OAAOC,cAAQR,YAAAA,EAAOS,aAAPC,EAAaC,oCAAQP,EAAIQ,wBACzD,cAAkBZ,EAAMa,yBAAS,KAAzBC,UACJ,GAAc,OAAXA,EAAgB,CACf,IAAMC,EAAShB,EAASe,GACxBV,EAAIY,YAAYD,IAGxB,OAAOX,GCbEa,EAAM,SAACC,EAAIC,GAEpB,IADA,IAAMC,EAAS,GACNC,EAAI,EAAGA,EAAIC,KAAKC,IAAIL,EAAGM,OAAQL,EAAGK,QAASH,IAChDD,EAAOK,KAAK,CAACP,EAAGG,GAAIF,EAAGE,KAE3B,OAAOD,GAGEM,EAAgB,SAACC,EAASC,EAAUC,GAE7C,IADA,IAAMC,EAAU,gBACX,WAAOC,OAAGC,OACZF,EAAQL,KAAK,SAAAQ,GACR,IACQA,EAAMrB,aAAamB,EAAGC,SACvBE,IAGR,OAAOD,WAPO1B,OAAOC,QAAQqB,sBAFsB,eAa/CE,GACFA,KAAKH,GACNE,EAAQL,KAAK,SAAAQ,GAET,OADAA,EAAME,gBAAgBJ,GACfE,KAJnB,IAAK,IAAMF,KAAKH,IAALG,GASX,gBAAOE,GACH,cAAiBH,mBACbM,WAAMH,KAKLI,EAAe,SAACC,EAAcC,GAMvC,IAJA,MAAMT,EAAU,GACVU,EAAoB,GACpBC,EAAiB,OAEWxB,EAAIqB,EAAcC,mBAAe,eAC/DT,EAAQL,KAAKiB,cAGjB,GAAGJ,EAAad,OAASe,EAAaf,OAClC,2BAAWmB,UACPH,EAAkBf,KAAK,SAAAQ,GACnB,IAAMW,EAAY7C,EAAS4C,GAE3B,OADAV,EAAMjB,YAAY4B,GACXX,SAJeM,EAAaM,MAAMP,EAAad,iCAQ9D,IAAK,IAAIH,EAAI,EAAGA,EAAIC,KAAKwB,IAAIP,EAAaf,OAASc,EAAad,QAASH,IACrEoB,EAAehB,KAAK,SAAAQ,GAEhB,OADAA,EAAMc,YAAYd,EAAMe,WACjBf,IAKnB,gBAAOgB,GAGH,cAA4BhC,EAAIa,EAASmB,EAAQC,4BAAa,gBAC1Dd,cAGJ,cAAmBI,mBACfJ,WAAMa,GAGV,cAAmBR,mBACfL,WAAMa,GAGV,OAAOA,IAIFP,EAAO,SAACS,EAAUxB,GAE3B,QAAgByB,IAAbzB,EACC,gBAAOM,GACHA,EAAMoB,UAKd,GAAuB,iBAAbF,GAA6C,iBAAbxB,EACtC,OAAGwB,IAAaxB,WACLM,GACH,IAAMqB,EAAWvD,EAAS4B,GAE1B,OADAM,EAAMsB,YAAYD,GACXA,YAGJrB,KAIf,GAAGkB,EAASK,UAAY7B,EAAS6B,QAC7B,gBAAOvB,GACH,IAAMqB,EAAWvD,EAAS4B,GAE1B,OADAM,EAAMsB,YAAYD,GACXA,GAIf,IAAMG,EAAiB/B,EAAcC,EAASwB,EAAS1C,KAAKE,MAAOgB,EAASlB,KAAKE,OAC3E+C,EAAgBrB,EAAac,EAAStC,SAAUc,EAASd,UAE/D,gBAAOoB,GAIH,OAHAwB,EAAexB,GACfyB,EAAczB,GAEPA"}